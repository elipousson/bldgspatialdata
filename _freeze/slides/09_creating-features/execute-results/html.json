{
  "hash": "1c197a27f3ac2ef6a715d596dff3f12e",
  "result": {
    "markdown": "---\ntitle: \"Creating feature data with R and QGIS\"\nformat: revealjs\neditor: visual\n---\n\n::: {.cell}\n\n:::\n\n\n## Key questions\n\n-   Why or why not create your own features?\n-   What tools can you use to create features?\n-   How can you structure your geometry and attribute data?\n-   What tools can you use to create features?\n\n## Why create your own features?\n\n-   Data does not exist\n-   Data exists but...\n    -   you can't get it\n    -   you aren't *allowed* to use it\n-   Data exists and you can get it but...\n    -   The format can't be accessed effectively\n    -   The geometry is inaccurate\n    -   The geometry too general\n\n## Why *not* create your own features?\n\n-   May be time-consuming\n-   May be difficult to get level of detail or accuracy required\n-   May lack standards to ensure interoperability\n\n## What tools can you use to create features?\n\n-   Collect non-spatial information (e.g. a set of addresses or a survey that asks respondents to provide spatial information) then add spatial data to it\n-   Collect spatial information using a device/sensor with a built-in GPS or using a smartphone application (e.g. [Strava](https://www.strava.com/mobile) or [StreetComplete](https://github.com/streetcomplete/StreetComplete))\n-   Collect spatial information by drawing features using a web application or desktop GIS\n\nDifferent situations require different approaches. Privacy, cost, accuracy, ease of use, or training requirements are all relevant factors.\n\n## How can you structure your geometry?\n\n-   Do you need points, lines, polygons, or something else?\n-   Do you need a *consistent* representation of the spatial characteristics of \"real world\" conditions or phenomena?\n-   What scale or resolution is appropriate for your data?\n-   Should your data be \"snapped\" (or related) to another existing feature?\n\nAgain, your approach depends on what you plan to do with the data in the future. Is your primary goal visualization? Analysis? Data sharing?\n\n## Try it out: Using web application to create features\n\nThere are several popular web applications that support the creation of spatial data:\n\n-   [**Google MyMaps**](https://www.google.com/maps/about/mymaps/)**:** Supports import of CSV, TSV, KML/KMZ, GPX, XLSX, Google Sheet, and photos with EXIF location data. Few recent updates.\n\n-   [**geojson.io**](https://geojson.io)**:** Supports GeoJSON import/export along with KML, GPX, CSV, GTFS, TopoJSON, and other formats, raster tile layers. Recently updated by Mapbox.\n\n-   [**Felt**](https://felt.com/)**:** Supports collaborative editing and a wide range of embedded rich media.\n\nHow to decide? Look at pricing, data import and export options, collaboration needs.\n\n##  Try it out: Create a set of features with geojson.io\n\n- Open geojson.io\n- Optional: Load a xyz tile layer using a rectified map from [Map Warper](https://mapwarper.net/maps)\n- Using the basemap (or your tile layer) as a reference zoom and pan to an area of interest\n- Select the point, line, polygon, or rectangle tool from the options on the right side of the map pane\n- Add a few features to the map\n- Select a feature from the map and use the pop-up table to enter an attribute name (left side) and value (right side)\n- Switch to the table view on the right to see the attribute data\n- Select the Edit map tool from the options on the right side of the map pane. Try editing a feature (make sure to save your edits).\n- Select Save > GeoJSON from the menu to export data to a GeoJSON file\n\n## How can you structure your attribute data?\n\n-   Are there any existing data standards you can use or adapt?\n-   Is there an existing unique identifier you can use or adapt? Or do you need to assign an arbitrary unique identifier? Is your unique identifier stable or subject to change?\n-   If you are basing your data on an existing source, do you transcribe all attributes in the original source? Or are you only transcribing some of those attributes?\n-   Can you use a \"flat\" table structure? Or do you need multiple tables or a nested format?\n-   Can you validate your attributes?\n\n## Hands-on: Options for validating data\n\n- **Google Forms** offers built-in validation by limiting inputs, requiring a set length, or requiring input text match a specific pattern\n- **Google Sheets** and **Excel** both provide\n\n## Hands-on: Using Google Sheets (and {googlesheets4})\n\n- Create a Google Sheet (I'll provide it this time)\n- Set up columns for longitude and latitude (or for a partial or full address). Note: Separate street address, city, and state columns can be combined using formulas.\n- Set up additional columns as needed. Make sure to avoid merging column ranges and keep all column names in the first row.\n- Consider creating a separate \"data dictionary\" sheet where you can use the `TRANSPOSE()` formula to switch column names into rows.\n- Consider using the \"Data validation\" menu to add validation to any columns where appropriate.\n\n## Hands-on: Using {mapedit}\n\nThe mapedit package offers multiple editors:\n\n-   \"leaflet.extras\" (default)\n-   \"leafpm\"\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n:::\n\n\n------------------------------------------------------------------------\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}