[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website was created by Eli Pousson for the Fall 2022 course Building Spatial Datasets at the University of Maryland Baltimore County, Department of Geography & Environmental Systems (GES). This website. The site includes the course syllabus, a schedule of readings, assignments, examples, and resources."
  },
  {
    "objectID": "about.html#credits",
    "href": "about.html#credits",
    "title": "About",
    "section": "Credits",
    "text": "Credits\nThis course website is based on the Program Evaluation for Public Service course website (repo) by Andrew Heiss at Georgia State University (licensed under a MIT License)."
  },
  {
    "objectID": "assignments/01_find-data.html",
    "href": "assignments/01_find-data.html",
    "title": "Find spatial data",
    "section": "",
    "text": "Learn how to…\n\nFrame a search strategy for spatial data based on your research question and anticipated data needs.\nPerform a search for geospatial data in the BTAA Geoportal using the text, map, and facet searching features of that system.\nDetermine how to access relevant geospatial datasets using the BTAA Geoportal based on the results of your search process.\nThe BTAA Geoportal includes the Government Open Geospatial Data Collection which contains links to open geospatial datasets, web services, interactive maps, and data portals distributed by a federal, state, county, municipal, or regional public entity. The collection includes data from Maryland iMap, Open Baltimore, the Baltimore County Open Data Portal, and other county-level open data portals."
  },
  {
    "objectID": "assignments/01_find-data.html#step-1-framing-your-search",
    "href": "assignments/01_find-data.html#step-1-framing-your-search",
    "title": "Find spatial data",
    "section": "Step 1: Framing your search",
    "text": "Step 1: Framing your search\nWrite: Take a few minutes, and write down some notes related to the questions below to frame your search strategy for spatial data.\n\n\n\n\n\n\nThe What, Where, and When questions will help you determine the initial scope of your data needs. The Who questions will help you brainstorm some potential sources for beginning your search.\n\n\n\nWhat - Ask yourself questions like:\n\nWhat is my research question, and what types of analysis am I planning to carry out?\nWhat data will I need to address this question or carry out this analysis?\nWhat types of data am I seeking (e.g., vector, raster, tabular)?\n\nWhere - Ask yourself questions like:\n\nWhat geographic area(s) am I studying?\nWhat spatial scale/resolution am I planning to use for my analysis, and is this realistic?\n\nWhen - Ask yourself questions like:\n\nWhat time period(s) am I studying?\nIs my analysis based on a single point in time, or am I planning to compare data across multiple time periods?\nWhat is my desired periodicity for data collection (e.g., monthly, annually, every decade), and is this realistic?\n\nWho - Ask yourself questions like:\n\nWho is likely to care about this research topic and associated datasets?\nWho has published on this topic, and what data did they use?\nWhat government agencies, educational institutions, non-profits, research centers, commercial entities, or other organizations might collect and distribute these data?"
  },
  {
    "objectID": "assignments/01_find-data.html#step-2-searching-for-data-in-the-btaa-geoportal",
    "href": "assignments/01_find-data.html#step-2-searching-for-data-in-the-btaa-geoportal",
    "title": "Find spatial data",
    "section": "Step 2: Searching for data in the BTAA Geoportal",
    "text": "Step 2: Searching for data in the BTAA Geoportal\nWrite: In 1-2 sentences, briefly describe your research question or topic. You are welcome but not required to stick with this question or topic beyond this assignment.\nAccess the Big Ten Academic Alliance Geoportal at https://geo.btaa.org.\n\nComplete a keyword search\n\nBased on your articulated research question or topic, start by performing a text-based search (i.e., keywords).\nWrite: What search terms did you use?\nExplore your initial results. If your search returns relevant results, open the item page for a few of those records to examine in more detail.\nReflect and write: Did your search return relevant results? If so, record the title(s) for the relevant dataset(s).\n\nWhat did you learn from examining the item page? Describe the ways these data are accessible (e.g., web services, direct download).\nIf not, what other search terms might return more relevant results?\n\nObserve and write: Try a second keyword search using these new terms, and explore these new results. Record your new search terms and the title(s) for any relevant dataset(s).\n\n\n\nComplete a map-based search and use facets to filter results\n\nReturn to the BTAA Geoportal homepage, and perform a map-based search (using option 1).\nObserve and write: Examine your initial results. If your search returns relevant results, open the item page for a few of those records to examine in more detail. Record the title(s) for the relevant dataset(s).\nReturn to your search results page. Use one or more of the facets available on the left side of the page to refine your search results.\nReflect and write: What facet(s) did you use to refine your search? Was this approach helpful in narrowing down your results to more relevant datasets? Record the title(s) for any relevant datasets.\nObserve and write: Examine the item page for one of these datasets. Describe the ways these data are accessible (e.g., web services, direct download).\n\n\n\nPlanning next steps in your search\nTo wrap up, briefly describe your next steps.\nIf you located relevant datasets for your project:\n\nAre there additional searches that you plan to perform in the BTAA Geoportal to try to find other relevant datasets? What types of searches are you planning?\nFor datasets you’ve already located, how will you go about accessing them and evaluating them for use in your project?\n\nIf you did not locate relevant datasets for your project:\n\nAre there other searches that you might try in the BTAA Geoportal to find more relevant results? What types of searches?\nIf the BTAA Geoportal is unlikely to match your data needs for this project, what other options might be available to you? What other sources do you plan to explore next for finding relevant datasets?"
  },
  {
    "objectID": "assignments/02_read-data-qgis.html",
    "href": "assignments/02_read-data-qgis.html",
    "title": "Read spatial data and create a map with QGIS",
    "section": "",
    "text": "Learn how to…\n\n\n\n\nRead vector and tabular spatial data with QGIS then filter data by attribute.\nCreate a map that uses size, color, fill, or other aesthetics to visualize attributes from the data set.\n(“[The Georgia Negro] Relative Negro population of the states of the United States.” n.d.)\nThis assignment has two parts:\nThis assignment can be completed by following the linked tutorials but you are encouraged to experiment. You are welcome to use the Natural Earth quick start kit alone or in combination with another data set from Maryland iMap or Open Baltimore. You may use this assignment to continue exploring a data sets identified when you completed the first assignment on finding spatial data."
  },
  {
    "objectID": "assignments/02_read-data-qgis.html#read-spatial-data-with-qgis",
    "href": "assignments/02_read-data-qgis.html#read-spatial-data-with-qgis",
    "title": "Read spatial data and create a map with QGIS",
    "section": "Read spatial data with QGIS",
    "text": "Read spatial data with QGIS\nThe key steps for this assignment include:\n\nRead a vector dataset into QGIS.\nUse the Attributes toolbar and Select By Expression window to filter the data based on one or more attributes."
  },
  {
    "objectID": "assignments/02_read-data-qgis.html#create-a-map-with-qgis",
    "href": "assignments/02_read-data-qgis.html#create-a-map-with-qgis",
    "title": "Read spatial data and create a map with QGIS",
    "section": "Create a map with QGIS",
    "text": "Create a map with QGIS"
  },
  {
    "objectID": "assignments/03_read-data-r.html",
    "href": "assignments/03_read-data-r.html",
    "title": "Read spatial data and create a map with R and ggplot2",
    "section": "",
    "text": "library(sf)\n\nLinking to GEOS 3.10.2, GDAL 3.4.2, PROJ 8.2.1; sf_use_s2() is TRUE\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "assignments/03_read-data-r.html#read-spatial-data",
    "href": "assignments/03_read-data-r.html#read-spatial-data",
    "title": "Read spatial data and create a map with R and ggplot2",
    "section": "Read spatial data",
    "text": "Read spatial data\n\n\n\n\n\n\nTip\n\n\n\n\n\nMake sure to review the example on reading data with R before completing this assignment.\n\n\n\nRead a local or remote GeoPackage file\nLarge scale data, 1:10m"
  },
  {
    "objectID": "assignments/03_read-data-r.html#make-a-map-with-ggplot2",
    "href": "assignments/03_read-data-r.html#make-a-map-with-ggplot2",
    "title": "Read spatial data and create a map with R and ggplot2",
    "section": "Make a map with ggplot2",
    "text": "Make a map with ggplot2\nSupported file types may vary depending on local installation"
  },
  {
    "objectID": "assignments/04_read-tabular-data-r.html#clean-address-data",
    "href": "assignments/04_read-tabular-data-r.html#clean-address-data",
    "title": "Geocode tabular address data with R",
    "section": "Clean address data",
    "text": "Clean address data"
  },
  {
    "objectID": "assignments/04_read-tabular-data-r.html#geocode-address-data",
    "href": "assignments/04_read-tabular-data-r.html#geocode-address-data",
    "title": "Geocode tabular address data with R",
    "section": "Geocode address data",
    "text": "Geocode address data"
  },
  {
    "objectID": "assignments/04_read-tabular-data-r.html#convert-data-to-an-sf-object",
    "href": "assignments/04_read-tabular-data-r.html#convert-data-to-an-sf-object",
    "title": "Geocode tabular address data with R",
    "section": "Convert data to an sf object",
    "text": "Convert data to an sf object"
  },
  {
    "objectID": "assignments/04_read-tabular-data-r.html#extra-make-a-map-with-the-data",
    "href": "assignments/04_read-tabular-data-r.html#extra-make-a-map-with-the-data",
    "title": "Geocode tabular address data with R",
    "section": "Extra: Make a map with the data",
    "text": "Extra: Make a map with the data"
  },
  {
    "objectID": "assignments/georeference-map.html",
    "href": "assignments/georeference-map.html",
    "title": "Building Spatial Data",
    "section": "",
    "text": "https://editor.allmaps.org/#/"
  },
  {
    "objectID": "assignments/index.html",
    "href": "assignments/index.html",
    "title": "Assignments",
    "section": "",
    "text": "Find spatial data\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\nGeocode tabular address data with R\n\n\nLearn to use address geocoding, data cleaning, and other\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRead spatial data and create a map with QGIS\n\n\nLearn to read vector spatial data with QGIS, filter data by attribute, and create a map to visualize data attributes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\nRead spatial data and create a map with R and ggplot2\n\n\nLearn to read vector spatial data with R and the sf package and create a map to visualize spatial data with the ggplot2 package.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "examples/01_read-data-r.html",
    "href": "examples/01_read-data-r.html",
    "title": "Read and filter spatial data with R",
    "section": "",
    "text": "This example shows how to read spatial data into R using the sf package and explains the basic structure and attributes simple feature sf objects. This example uses two datasets from Natural Earth:\nYou are required to use this same data in completing the introductory assignments on reading and mapping data with QGIS and with R so this example.\nSimilar introductory information is available in:"
  },
  {
    "objectID": "examples/01_read-data-r.html#read-spatial-data",
    "href": "examples/01_read-data-r.html#read-spatial-data",
    "title": "Read and filter spatial data with R",
    "section": "Read spatial data",
    "text": "Read spatial data\n\n\n\n\n\n\nTip\n\n\n\n\n\nReview the sf vignette on Reading, Writing and Converting Simple Features for more detailed explanation on how to read spatial data into R.\n\n\n\nReading spatial data into your local R environment using the sf package is straight forward. For example, you can read a local GeoPackage file to an sf object by setting the dsn (short for data source name) to the file path:\n\ndsn <- here::here(\"files/data\", \"ne_50m_populated_places_simple.gpkg\")\n\npopulated_places <- st_read(dsn = dsn)\n\nReading layer `ne_50m_populated_places_simple' from data source \n  `/Users/elipousson/Documents/GitHub/bldgspatialdata/files/data/ne_50m_populated_places_simple.gpkg' \n  using driver `GPKG'\nSimple feature collection with 1251 features and 31 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -175.2206 ymin: -90 xmax: 179.2166 ymax: 78.22097\nGeodetic CRS:  WGS 84\n\n\nst_read read the GeoPackage file into a simple feature (sf) object and output details on the layer, data source, driver, and attributes of the new object.\nYou can also use read_sf() which is the same as st_read() but it returns a tibble object and uses quiet = TRUE by default.\n\ndsn <- here::here(\"files/data\", \"ne_10m_admin_0_countries.gpkg\")\n\ncountries <- read_sf(dsn = dsn)\n\nThe dsn argument can also be a URL for a spatial data file that is stored online (instead of locally on your computer) or a database endpoint. The data source is also not limited to a GeoPackage files. Supported filetypes include GeoJSON files, shapefiles, KML files, and any other file type with a GDAL (Geospatial Data Abstraction Library) driver. You can review list available drivers using the sf::st_drivers() function.\n\n\nSupported vector drivers\nSupported raster drivers"
  },
  {
    "objectID": "examples/01_read-data-r.html#structure-and-attributes-of-sf-objects",
    "href": "examples/01_read-data-r.html#structure-and-attributes-of-sf-objects",
    "title": "Read and filter spatial data with R",
    "section": "Structure and attributes of sf objects",
    "text": "Structure and attributes of sf objects\n\n\n\n\n\n\nTip\n\n\n\n\n\nRead the sf vignette on Simple Features for R for more detailed explanation of geometry types, dimensions, coordinate reference systems, and more. For more on data frames, read the R Manual: An Introduction to R on data frames or the chapter on Tibbles from R for Data Science.\n\n\n\nA simple feature (sf) object is always a data frame where each row is a feature. Like any other data frame, these columns can hold numeric (double or integer), character, factor, or logical values. These columns may also include list columns or nested data frame columns. The dplyr::glimpse() function provides a convenient way to get a quick overview of the column types and values for “populated_places” and “countries”:\n\nglimpse(populated_places)\n\nRows: 1,251\nColumns: 32\n$ scalerank  <int> 10, 10, 10, 10, 10, 10, 10, 8, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7…\n$ natscale   <int> 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 10, 10, 20, 20, 20, 20, 20…\n$ labelrank  <int> 5, 5, 3, 3, 3, 8, 0, 3, 3, 3, 3, 0, 6, 5, 5, 5, 5, 5, 5, 6,…\n$ featurecla <chr> \"Admin-1 region capital\", \"Admin-1 region capital\", \"Admin-…\n$ name       <chr> \"Bombo\", \"Fort Portal\", \"Potenza\", \"Campobasso\", \"Aosta\", \"…\n$ namepar    <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Uruguay\", NA, …\n$ namealt    <chr> NA, NA, NA, NA, NA, NA, NA, NA, \"Poitiers\", NA, NA, NA, NA,…\n$ nameascii  <chr> \"Bombo\", \"Fort Portal\", \"Potenza\", \"Campobasso\", \"Aosta\", \"…\n$ adm0cap    <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ capalt     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ capin      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ worldcity  <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ megacity   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ sov0name   <chr> \"Uganda\", \"Uganda\", \"Italy\", \"Italy\", \"Italy\", \"Finland\", \"…\n$ sov_a3     <chr> \"UGA\", \"UGA\", \"ITA\", \"ITA\", \"ITA\", \"ALD\", \"IS1\", \"VAT\", \"FR…\n$ adm0name   <chr> \"Uganda\", \"Uganda\", \"Italy\", \"Italy\", \"Italy\", \"Aland\", \"Pa…\n$ adm0_a3    <chr> \"UGA\", \"UGA\", \"ITA\", \"ITA\", \"ITA\", \"ALD\", \"PSX\", \"VAT\", \"FR…\n$ adm1name   <chr> \"Bamunanika\", \"Kabarole\", \"Basilicata\", \"Molise\", \"Valle d'…\n$ iso_a2     <chr> \"UG\", \"UG\", \"IT\", \"IT\", \"IT\", \"AX\", \"PS\", \"VA\", \"FR\", \"FR\",…\n$ note       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ latitude   <dbl> 0.583299, 0.671004, 40.642002, 41.562999, 45.737001, 60.096…\n$ longitude  <dbl> 32.533300, 30.275002, 15.798997, 14.655997, 7.315003, 19.94…\n$ pop_max    <dbl> 75000, 42670, 69060, 50762, 34062, 10682, 24599, 832, 85960…\n$ pop_min    <dbl> 21000, 42670, 69060, 50762, 34062, 10682, 24599, 832, 84807…\n$ pop_other  <dbl> 0, 0, 0, 0, 0, 0, 0, 562430, 80866, 223592, 117010, 0, 7894…\n$ rank_max   <int> 8, 7, 8, 8, 7, 6, 7, 2, 8, 10, 9, 1, 8, 10, 10, 10, 2, 8, 8…\n$ rank_min   <int> 7, 7, 8, 8, 7, 6, 7, 2, 8, 9, 9, 1, 8, 8, 8, 8, 2, 8, 8, 7,…\n$ meganame   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ls_name    <chr> NA, NA, NA, NA, NA, NA, NA, \"Vatican City\", \"Poitier\", \"Cle…\n$ min_zoom   <dbl> 7.0, 7.0, 7.0, 7.0, 7.0, 7.0, 9.0, 7.0, 6.7, 6.0, 7.0, 7.0,…\n$ ne_id      <dbl> 1159113923, 1159113959, 1159117259, 1159117283, 1159117361,…\n$ geom       <POINT [°]> POINT (32.5333 0.5832991), POINT (30.275 0.6710041), …\n\nglimpse(countries)\n\nRows: 258\nColumns: 169\n$ featurecla <chr> \"Admin-0 country\", \"Admin-0 country\", \"Admin-0 country\", \"A…\n$ scalerank  <int> 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ LABELRANK  <int> 2, 3, 2, 3, 2, 2, 3, 5, 2, 2, 4, 5, 5, 2, 3, 6, 2, 6, 3, 3,…\n$ SOVEREIGNT <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ SOV_A3     <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"GB1\", \"CYP\", \"IN…\n$ ADM0_DIF   <int> 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ LEVEL      <int> 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,…\n$ TYPE       <chr> \"Sovereign country\", \"Sovereign country\", \"Sovereign countr…\n$ TLC        <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ ADMIN      <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ ADM0_A3    <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ GEOU_DIF   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ GEOUNIT    <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ GU_A3      <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ SU_DIF     <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ SUBUNIT    <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ SU_A3      <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ BRK_DIFF   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ NAME       <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ NAME_LONG  <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ BRK_A3     <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ BRK_NAME   <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ BRK_GROUP  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ ABBREV     <chr> \"Indo.\", \"Malay.\", \"Chile\", \"Bolivia\", \"Peru\", \"Arg.\", \"Dhe…\n$ POSTAL     <chr> \"INDO\", \"MY\", \"CL\", \"BO\", \"PE\", \"AR\", \"DH\", \"CY\", \"IND\", \"C…\n$ FORMAL_EN  <chr> \"Republic of Indonesia\", \"Malaysia\", \"Republic of Chile\", \"…\n$ FORMAL_FR  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ NAME_CIAWF <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ NOTE_ADM0  <chr> NA, NA, NA, NA, NA, NA, \"U.K.\", NA, NA, NA, NA, NA, NA, NA,…\n$ NOTE_BRK   <chr> NA, NA, NA, NA, NA, NA, \"U.K. Base\", NA, NA, NA, NA, \"Parti…\n$ NAME_SORT  <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ NAME_ALT   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MAPCOLOR7  <int> 6, 2, 5, 1, 4, 3, 6, 1, 1, 4, 3, 3, 4, 4, 1, 2, 5, 1, 3, 2,…\n$ MAPCOLOR8  <int> 6, 4, 1, 5, 4, 1, 6, 2, 3, 4, 2, 2, 4, 4, 3, 8, 2, 3, 6, 6,…\n$ MAPCOLOR9  <int> 6, 3, 5, 2, 4, 3, 6, 3, 2, 4, 5, 5, 4, 1, 3, 6, 7, 4, 2, 2,…\n$ MAPCOLOR13 <int> 11, 6, 9, 3, 11, 13, 3, 7, 2, 3, 9, 8, 12, 13, 5, 7, 3, 5, …\n$ POP_EST    <dbl> 270625568, 31949777, 18952038, 11513100, 32510453, 44938712…\n$ POP_RANK   <int> 17, 15, 14, 14, 15, 15, 5, 12, 18, 18, 13, 12, 13, 17, 14, …\n$ POP_YEAR   <int> 2019, 2019, 2019, 2019, 2019, 2019, 2013, 2019, 2019, 2019,…\n$ GDP_MD     <int> 1119190, 364681, 282318, 40895, 226848, 445445, 314, 24948,…\n$ GDP_YEAR   <int> 2019, 2019, 2019, 2019, 2019, 2019, 2013, 2019, 2019, 2019,…\n$ ECONOMY    <chr> \"4. Emerging region: MIKT\", \"6. Developing region\", \"5. Eme…\n$ INCOME_GRP <chr> \"4. Lower middle income\", \"3. Upper middle income\", \"3. Upp…\n$ FIPS_10    <chr> \"ID\", \"MY\", \"CI\", \"BL\", \"PE\", \"AR\", \"-99\", \"CY\", \"IN\", \"CH\"…\n$ ISO_A2     <chr> \"ID\", \"MY\", \"CL\", \"BO\", \"PE\", \"AR\", \"-99\", \"CY\", \"IN\", \"CN\"…\n$ ISO_A2_EH  <chr> \"ID\", \"MY\", \"CL\", \"BO\", \"PE\", \"AR\", \"-99\", \"CY\", \"IN\", \"CN\"…\n$ ISO_A3     <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"-99\", \"CYP\", \"IN…\n$ ISO_A3_EH  <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"-99\", \"CYP\", \"IN…\n$ ISO_N3     <chr> \"360\", \"458\", \"152\", \"068\", \"604\", \"032\", \"-99\", \"196\", \"35…\n$ ISO_N3_EH  <chr> \"360\", \"458\", \"152\", \"068\", \"604\", \"032\", \"-99\", \"196\", \"35…\n$ UN_A3      <chr> \"360\", \"458\", \"152\", \"068\", \"604\", \"032\", \"-099\", \"196\", \"3…\n$ WB_A2      <chr> \"ID\", \"MY\", \"CL\", \"BO\", \"PE\", \"AR\", \"-99\", \"CY\", \"IN\", \"CN\"…\n$ WB_A3      <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"-99\", \"CYP\", \"IN…\n$ WOE_ID     <int> 23424846, 23424901, 23424782, 23424762, 23424919, 23424747,…\n$ WOE_ID_EH  <int> 23424846, 23424901, 23424782, 23424762, 23424919, 23424747,…\n$ WOE_NOTE   <chr> \"Exact WOE match as country\", \"Exact WOE match as country\",…\n$ ADM0_ISO   <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"-99\", \"CYP\", \"IN…\n$ ADM0_DIFF  <chr> NA, NA, NA, NA, NA, NA, \"1\", NA, NA, NA, NA, NA, NA, NA, \"1…\n$ ADM0_TLC   <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_US <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_FR <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_RU <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_ES <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_CN <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_TW <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_IN <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_NP <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_PK <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_DE <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_GB <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_BR <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_IL <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_PS <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_SA <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_EG <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_MA <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_PT <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_AR <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_JP <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_KO <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_VN <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_TR <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_ID <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_PL <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_GR <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_IT <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_NL <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_SE <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_BD <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_UA <chr> \"IDN\", \"MYS\", \"CHL\", \"BOL\", \"PER\", \"ARG\", \"ESB\", \"CYP\", \"IN…\n$ ADM0_A3_UN <int> -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99,…\n$ ADM0_A3_WB <int> -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99,…\n$ CONTINENT  <chr> \"Asia\", \"Asia\", \"South America\", \"South America\", \"South Am…\n$ REGION_UN  <chr> \"Asia\", \"Asia\", \"Americas\", \"Americas\", \"Americas\", \"Americ…\n$ SUBREGION  <chr> \"South-Eastern Asia\", \"South-Eastern Asia\", \"South America\"…\n$ REGION_WB  <chr> \"East Asia & Pacific\", \"East Asia & Pacific\", \"Latin Americ…\n$ NAME_LEN   <int> 9, 8, 5, 7, 4, 9, 8, 6, 5, 5, 6, 9, 7, 8, 8, 7, 5, 6, 8, 5,…\n$ LONG_LEN   <int> 9, 8, 5, 7, 4, 9, 8, 6, 5, 5, 6, 9, 7, 8, 11, 7, 5, 6, 8, 5…\n$ ABBREV_LEN <int> 5, 6, 5, 7, 4, 4, 5, 4, 5, 5, 4, 4, 4, 4, 7, 4, 4, 4, 5, 5,…\n$ TINY       <int> -99, -99, -99, -99, -99, -99, 3, -99, -99, -99, -99, -99, 4…\n$ HOMEPART   <int> 1, 1, 1, 1, 1, 1, -99, 1, 1, 1, 1, -99, 1, 1, 1, 1, 1, 1, 1…\n$ MIN_ZOOM   <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ MIN_LABEL  <dbl> 1.7, 3.0, 1.7, 3.0, 2.0, 2.0, 6.5, 4.5, 1.7, 1.7, 3.0, 4.5,…\n$ MAX_LABEL  <dbl> 6.7, 8.0, 6.7, 7.5, 7.0, 7.0, 11.0, 9.5, 6.7, 5.7, 8.0, 9.5…\n$ LABEL_X    <dbl> 101.892949, 113.837080, -72.318871, -64.593433, -72.900160,…\n$ LABEL_Y    <dbl> -0.954404, 2.528667, -38.151771, -16.666015, -12.976679, -3…\n$ NE_ID      <dbl> 1159320845, 1159321083, 1159320493, 1159320439, 1159321163,…\n$ WIKIDATAID <chr> \"Q252\", \"Q833\", \"Q298\", \"Q750\", \"Q419\", \"Q414\", \"Q9206745\",…\n$ NAME_AR    <chr> \"إندونيسيا\", \"ماليزيا\", \"تشيلي\", \"بوليفيا\", \"بيرو\", \"الأرجن…\n$ NAME_BN    <chr> \"ইন্দোনেশিয়া\", \"মালয়েশিয়া\", \"চিলি\", \"বলিভিয়া\", \"পেরু\", \"আর্জেন্…\n$ NAME_DE    <chr> \"Indonesien\", \"Malaysia\", \"Chile\", \"Bolivien\", \"Peru\", \"Arg…\n$ NAME_EN    <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ NAME_ES    <chr> \"Indonesia\", \"Malasia\", \"Chile\", \"Bolivia\", \"Perú\", \"Argent…\n$ NAME_FA    <chr> \"اندونزی\", \"مالزی\", \"شیلی\", \"بولیوی\", \"پرو\", \"آرژانتین\", \"د…\n$ NAME_FR    <chr> \"Indonésie\", \"Malaisie\", \"Chili\", \"Bolivie\", \"Pérou\", \"Arge…\n$ NAME_EL    <chr> \"Ινδονησία\", \"Μαλαισία\", \"Χιλή\", \"Βολιβία\", \"Περού\", \"Αργεν…\n$ NAME_HE    <chr> \"אינדונזיה\", \"מלזיה\", \"צ'ילה\", \"בוליביה\", \"פרו\", \"ארגנטינה\"…\n$ NAME_HI    <chr> \"इंडोनेशिया\", \"मलेशिया\", \"चिली\", \"बोलिविया\", \"पेरू\", \"अर्जेण्टीना\",…\n$ NAME_HU    <chr> \"Indonézia\", \"Malajzia\", \"Chile\", \"Bolívia\", \"Peru\", \"Argen…\n$ NAME_ID    <chr> \"Indonesia\", \"Malaysia\", \"Chili\", \"Bolivia\", \"Peru\", \"Argen…\n$ NAME_IT    <chr> \"Indonesia\", \"Malaysia\", \"Cile\", \"Bolivia\", \"Perù\", \"Argent…\n$ NAME_JA    <chr> \"インドネシア\", \"マレーシア\", \"チリ\", \"ボリビア\", \"ペルー\",…\n$ NAME_KO    <chr> \"인도네시아\", \"말레이시아\", \"칠레\", \"볼리비아\", \"페루\", \"아…\n$ NAME_NL    <chr> \"Indonesië\", \"Maleisië\", \"Chili\", \"Bolivia\", \"Peru\", \"Argen…\n$ NAME_PL    <chr> \"Indonezja\", \"Malezja\", \"Chile\", \"Boliwia\", \"Peru\", \"Argent…\n$ NAME_PT    <chr> \"Indonésia\", \"Malásia\", \"Chile\", \"Bolívia\", \"Peru\", \"Argent…\n$ NAME_RU    <chr> \"Индонезия\", \"Малайзия\", \"Чили\", \"Боливия\", \"Перу\", \"Аргент…\n$ NAME_SV    <chr> \"Indonesien\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Arge…\n$ NAME_TR    <chr> \"Endonezya\", \"Malezya\", \"Şili\", \"Bolivya\", \"Peru\", \"Arjanti…\n$ NAME_UK    <chr> \"Індонезія\", \"Малайзія\", \"Чилі\", \"Болівія\", \"Перу\", \"Аргент…\n$ NAME_UR    <chr> \"انڈونیشیا\", \"ملائیشیا\", \"چلی\", \"بولیویا\", \"پیرو\", \"ارجنٹائ…\n$ NAME_VI    <chr> \"Indonesia\", \"Malaysia\", \"Chile\", \"Bolivia\", \"Peru\", \"Argen…\n$ NAME_ZH    <chr> \"印度尼西亚\", \"马来西亚\", \"智利\", \"玻利维亚\", \"秘鲁\", \"阿根…\n$ NAME_ZHT   <chr> \"印度尼西亞\", \"馬來西亞\", \"智利\", \"玻利維亞\", \"秘魯\", \"阿根…\n$ FCLASS_ISO <chr> \"Admin-0 country\", \"Admin-0 country\", \"Admin-0 country\", \"A…\n$ TLC_DIFF   <chr> NA, NA, NA, NA, NA, NA, \"1\", NA, NA, NA, NA, NA, NA, NA, NA…\n$ FCLASS_TLC <chr> \"Admin-0 country\", \"Admin-0 country\", \"Admin-0 country\", \"A…\n$ FCLASS_US  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_FR  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_RU  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_ES  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_CN  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_TW  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Unrecognized\", NA, NA,…\n$ FCLASS_IN  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_NP  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_PK  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Unrecognized\", \"Ad…\n$ FCLASS_DE  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_GB  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_BR  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_IL  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_PS  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Admin-0 countr…\n$ FCLASS_SA  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Unrecognized\", \"Ad…\n$ FCLASS_EG  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_MA  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_PT  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_AR  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_JP  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_KO  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_VN  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_TR  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_ID  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ FCLASS_PL  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_GR  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_IT  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_NL  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_SE  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ FCLASS_BD  <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"Unrecognized\", \"Ad…\n$ FCLASS_UA  <chr> NA, NA, NA, NA, NA, NA, \"Admin-0 dependency\", NA, NA, NA, N…\n$ geom       <MULTIPOLYGON [°]> MULTIPOLYGON (((117.7036 4...., MULTIPOLYGON (…\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nReview the tibble vignette on Column types for more detailed explanation of geometry types, dimensions, coordinate reference systems, and more.\n\n\n\nA sf object can have any number of rows but it always has at least one special list column with the geometry for each feature. This column is usually named “geometry” or “geom” but it can be named anything. You can extract, rename, or replace the geometry column using the sf::st_geometry function.\n\nsf::st_geometry(countries)\n\nGeometry set for 258 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nMULTIPOLYGON (((117.7036 4.163415, 117.7036 4.1...\n\n\nMULTIPOLYGON (((117.7036 4.163415, 117.6971 4.1...\n\n\nMULTIPOLYGON (((-69.51009 -17.50659, -69.50611 ...\n\n\nMULTIPOLYGON (((-69.51009 -17.50659, -69.51009 ...\n\n\nMULTIPOLYGON (((-69.51009 -17.50659, -69.63832 ...\n\n\nIn addition to a geometry column, sf object also four special attributes that make it different than other dataframes. These attributes are:\n\nGeometry type\nDimensions\nBounding box\nCoordinate reference system\n\nSimple feature collections (sfc) objects share all these same attributes. Bounding box (bbox) objects have a crs attribute but none of the other attributes.\nGeometry types\nYou can use sf::st_geometry_type() to list the geometry types for any sf object. All of the features in countries use MULTIPOLYGON geometry. Features in populated_places use POINT geometry.\n\nst_geometry_type(countries, by_geometry = FALSE)\n\n[1] MULTIPOLYGON\n18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE\n\nst_geometry_type(populated_places, by_geometry = FALSE)\n\n[1] POINT\n18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE\n\n\nWhile GeoPackage and shapefiles only support a single geometry type for each layer, sf objects do support mixed types. To show how this works, we can filter the populated places and country boundaries data to a single country then combine both objects into a single object using dplyr::bind_rows().\n\n\n\n\n\n\nTip\n\n\n\n\n\nReview the Data transformation chapter from R for Data Science for more on how to use dplyr package to filter and arrange rows, select columns, and add new variables to a data frame.\n\n\n\n\nusa_name <- \"United States of America\"\n\nusa_places <- filter(populated_places, adm0name == usa_name)\n\nusa_boundaries <- filter(countries, SOVEREIGNT == usa_name)\n\nusa <-\n  bind_rows(\n    usa_places,\n    usa_boundaries\n  )\n\nst_geometry_type(usa, by_geometry = TRUE)\n\n  [1] POINT        POINT        POINT        POINT        POINT       \n  [6] POINT        POINT        POINT        POINT        POINT       \n [11] POINT        POINT        POINT        POINT        POINT       \n [16] POINT        POINT        POINT        POINT        POINT       \n [21] POINT        POINT        POINT        POINT        POINT       \n [26] POINT        POINT        POINT        POINT        POINT       \n [31] POINT        POINT        POINT        POINT        POINT       \n [36] POINT        POINT        POINT        POINT        POINT       \n [41] POINT        POINT        POINT        POINT        POINT       \n [46] POINT        POINT        POINT        POINT        POINT       \n [51] POINT        POINT        POINT        POINT        POINT       \n [56] POINT        POINT        POINT        POINT        POINT       \n [61] POINT        POINT        POINT        POINT        POINT       \n [66] POINT        POINT        POINT        POINT        POINT       \n [71] POINT        POINT        POINT        POINT        POINT       \n [76] POINT        POINT        POINT        POINT        POINT       \n [81] POINT        POINT        POINT        POINT        POINT       \n [86] POINT        POINT        POINT        POINT        POINT       \n [91] POINT        POINT        POINT        POINT        POINT       \n [96] POINT        POINT        POINT        POINT        POINT       \n[101] POINT        POINT        POINT        POINT        POINT       \n[106] POINT        POINT        POINT        POINT        POINT       \n[111] POINT        MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n[116] MULTIPOLYGON MULTIPOLYGON MULTIPOLYGON\n18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE\n\n\nYou can also use the sf::st_is() function to test if an object matches a specific geometry type. You can combine this function with all or any to check features as a whole.\n\nst_is(usa_boundaries, type = \"MULTIPOLYGON\")\n\n[1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE\n\nany(st_is(usa_places, type = \"MULTIPOLYGON\"))\n\n[1] FALSE\n\nall(st_is(usa_places, type = \"POINT\"))\n\n[1] TRUE\n\nany(st_is(usa, type = \"MULTIPOLYGON\"))\n\n[1] TRUE\n\n\nDimension\nsf objects must have at least two dimensions: X and Y. All geometries (such as polygons or linestrings) are made up of points so two dimensions are required to locate a point within a coordinate reference system. You may also see people refer to X and Y as easting and northing or longitude and latitude. sf objects can optionally include a Z dimension (for altitude) or a M coordinate (for a measure associated with an individual point). The M coordinate is rarely used but can be\nM coordinate (rarely used), denoting some measure that is associated with the point, rather than with the feature as a whole (in which case it would be a feature attribute) (such as the time of measurement or measurement error of the coordinates)\nIf you do not need the Z dimension in your data, you can drop it using the sf::st_zm() function.\nAll geometries are composed of points. Points are coordinates in a 2-, 3- or 4-dimensional space. All points in a geometry have the same dimensionality. In addition to X and Y coordinates, there are two optional additional dimensions:\na Z coordinate, denoting altitude\nan \nThe four possible cases then are:\ntwo-dimensional points refer to x and y, , we refer to them as XY\nthree-dimensional points as XYZ\nthree-dimensional points as XYM\nfour-dimensional points as XYZM (the third axis is Z, fourth M)\nBounding box\nYou can get the bounding box for any sf or sfc object using sf::st_bbox\n\nusa_bbox <- st_bbox(usa)\n\nusa_bbox\n\n      xmin       ymin       xmax       ymax \n-179.14350  -14.53289  179.78094   71.41250 \n\n\nA bounding box is a named numeric vector with a crs attribute. You can convert it to a numeric vector using as.numeric or get the coordinate reference system with sf::st_crs.\n\nas.numeric(usa_bbox)\n\n[1] -179.14350  -14.53289  179.78094   71.41250\n\nst_crs(usa_bbox)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n        MEMBER[\"World Geodetic System 1984 (Transit)\"],\n        MEMBER[\"World Geodetic System 1984 (G730)\"],\n        MEMBER[\"World Geodetic System 1984 (G873)\"],\n        MEMBER[\"World Geodetic System 1984 (G1150)\"],\n        MEMBER[\"World Geodetic System 1984 (G1674)\"],\n        MEMBER[\"World Geodetic System 1984 (G1762)\"],\n        MEMBER[\"World Geodetic System 1984 (G2139)\"],\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]],\n        ENSEMBLEACCURACY[2.0]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n\n\nYou can convert a numeric vector back into a bounding box object with sf::st_bbox.\n\nst_bbox(\n  c(\"xmin\" = -179.14350,\n    \"ymin\" = -14.53289,\n    \"xmax\" = 179.78094,\n    \"ymax\" = 71.41250)\n)\n\n      xmin       ymin       xmax       ymax \n-179.14350  -14.53289  179.78094   71.41250 \n\n\nIf we want to plot the bounding box on a map, we can convert it into a sfc object with sf::st_as_sfc() and convert the sfc object into an sf object using sf::st_as_sf().\n\nusa_bbox_sfc <- st_as_sfc(usa_bbox)\n\nusa_bbox_sf <- st_as_sf(usa_bbox_sfc)\n\nFinally, we can use tmap::tmap_leaflet() to compare the bounding box to the country boundary and places objects created in the previous section on geometry types.\n\ntmap_leaflet(\n  tm_shape(usa_bbox_sf) +\n    tm_borders() +\n    tm_shape(usa_boundaries) +\n    tm_polygons(col = \"NAME\", alpha = 0.2) +\n    tm_shape(usa_places) +\n    tm_sf(id = \"name\", alpha = 0.8)\n)\n\n\n\n\n\n\nCoordinate reference systems\nYou can get a coordinate reference system with sf::st_crs. This returns a crs object which has the crs for the user input object as a character string and the well-known text (wkt) for the coordinate reference system.\n\nusa_crs <- st_crs(usa)\n\nusa_crs\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n        MEMBER[\"World Geodetic System 1984 (Transit)\"],\n        MEMBER[\"World Geodetic System 1984 (G730)\"],\n        MEMBER[\"World Geodetic System 1984 (G873)\"],\n        MEMBER[\"World Geodetic System 1984 (G1150)\"],\n        MEMBER[\"World Geodetic System 1984 (G1674)\"],\n        MEMBER[\"World Geodetic System 1984 (G1762)\"],\n        MEMBER[\"World Geodetic System 1984 (G2139)\"],\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]],\n        ENSEMBLEACCURACY[2.0]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n\n\nA crs object also has a method for returning the spatial reference identifier (or SRID). The SRID is a unique identifier for a specific coordinate system, tolerance, and resolution.\n\n\n\n\n\n\nFind coordinate reference systems\n\n\n\n\n\nYou can explore a database of over 6000 coordinate reference system with the corresponding EPSG and ESRI SRID codes at EPSG.io. You can also use the crsuggest package which uses data from the EPSG Registry (a product of the International Association of Oil & Gas Producers). The Web Mercator projection or “EPSG:3857” is convenient option that works well for many use cases.\n\n\n\n\nst_crs(usa)$srid\n\n[1] \"EPSG:4326\"\n\n\nYou can change the coordinate reference system using the sf::st_transform function:\n\nusa_3857 <- st_transform(usa, 3857)\n\nst_crs(usa_3857)\n\nCoordinate Reference System:\n  User input: EPSG:3857 \n  wkt:\nPROJCRS[\"WGS 84 / Pseudo-Mercator\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"Popular Visualisation Pseudo-Mercator\",\n        METHOD[\"Popular Visualisation Pseudo Mercator\",\n            ID[\"EPSG\",1024]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"False easting\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Web mapping and visualisation.\"],\n        AREA[\"World between 85.06°S and 85.06°N.\"],\n        BBOX[-85.06,-180,85.06,180]],\n    ID[\"EPSG\",3857]]\n\n\nYou can also check if a object is using a geographic (also known as geodetic or simply lon/lat) or projected coordinate reference system using the sf::st_is_longlat function:\n\nst_is_longlat(usa)\n\n[1] TRUE\n\nst_is_longlat(usa_3857)\n\n[1] FALSE\n\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nReview the sf vignette Spherical geometry in sf using s2geometry for a technical explanation of how sf uses the S2 Geometry Library when manipulating data with a geographic coordinate reference system.\n\n\n\nBoth ggplot2 and tmap can convert the crs of input objects before mapping. For example, tm_shape supports an optional “projection” argument such as “EPSG:3035” (the Lambert azimuthal equal-area projection):\n\ntm_shape(countries, projection = \"EPSG:3035\") +\n  tm_polygons(\"grey85\", border.col = \"grey30\") +\n  tm_layout(earth.boundary = TRUE, frame = FALSE)\n\n\n\n\nThe ggplot2::geom_sf function uses the coordinate reference system of the first sf object provided and re-projects additional objects to match.\n\nlibrary(ggplot2)\n\ncountries_3857 <- st_transform(countries, 3857)\n\nggplot() +\n  geom_sf(data = populated_places, alpha = 0.2) +\n  geom_sf(data = countries_3857, fill = NA) +\n  labs(title = st_crs(populated_places)$srid) +\n  theme_minimal()\n\n\n\n\nWhen mapping projected boundaries that include Antartica, ggplot2 and tmap both provide an unexpected result:\n\n\n\ntm_shape(countries_3857) +\n  tm_borders()\n\n\n\n\n\n\nggplot() +\n  geom_sf(data = countries_3857) +\n  theme_minimal()"
  },
  {
    "objectID": "examples/01_read-data-r.html#filter-and-subset-spatial-data",
    "href": "examples/01_read-data-r.html#filter-and-subset-spatial-data",
    "title": "Read and filter spatial data with R",
    "section": "Filter and subset spatial data",
    "text": "Filter and subset spatial data"
  },
  {
    "objectID": "examples/02_read-tabular-data-r.html#read-tabular-data-with-coordinates-and-convert-to-sf",
    "href": "examples/02_read-tabular-data-r.html#read-tabular-data-with-coordinates-and-convert-to-sf",
    "title": "Read tabular data and convert to spatial data with R",
    "section": "Read tabular data with coordinates and convert to sf",
    "text": "Read tabular data with coordinates and convert to sf\nThe readr::read_csv() function from the readr package is the preferred method for importing a comma separated variable (csv) data file. The package also supports less common tabular data files such as tab separated variable (tsv). You could also use the read.csv from the utils package (included with base R).\nFor example, you can read a csv file with the names and locations of Baltimore City Public School System programs.\n\nfile <- here::here(\"files/data\", \"bcps_programs_SY2122.csv\")\n\nbcps_programs_df <- read_csv(file = file)\n\nRows: 162 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): program_name_short, type, category\ndbl (3): program_number, lon, lat\nlgl (1): swing_space\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nBy default, read_csv prints the number of rows and columns, the selected delimiter and the automatic specification of column types. In general, you should always examine the data after reading it in to make sure the column types are appropriate or if manual specification is needed.\n\nbcps_programs_df\n\n# A tibble: 162 × 7\n   program_name_short program_number type            categ…¹ swing…²   lon   lat\n   <chr>                       <dbl> <chr>           <chr>   <lgl>   <dbl> <dbl>\n 1 Cecil E                         7 Traditional     E       FALSE   -76.6  39.3\n 2 Steuart Hill E                  4 Traditional     E       FALSE   -76.6  39.3\n 3 Lakeland EM                    12 Traditional     EM      FALSE   -76.6  39.3\n 4 Eutaw-Marshburn E              11 Traditional     E       FALSE   -76.6  39.3\n 5 City Springs EM                 8 Charter-Conver… EM      FALSE   -76.6  39.3\n 6 James McHenry EM               10 Traditional     EM      FALSE   -76.6  39.3\n 7 Tench Tilghman EM              13 Traditional     EM      FALSE   -76.6  39.3\n 8 Stadium School M               15 Traditional     M       FALSE   -76.6  39.3\n 9 Hilton E                       21 Traditional     E       FALSE   -76.7  39.3\n10 Johnston Sq E                  16 Traditional     E       FALSE   -76.6  39.3\n# … with 152 more rows, and abbreviated variable names ¹​category, ²​swing_space\n\n\nOne way to address issues with column specification is to read all columns as character types and convert columns to other types as needed.\n\nbcps_programs_df <- read_csv(file = file, col_types = \"ccccccc\")\n\nbcps_programs_df <- bcps_programs_df %>% \n  mutate(\n    lat = as.numeric(lat),\n    lon = as.numeric(lon)\n  )\n\n\n\n\n\n\n\nValidating CSV files\n\n\n\n\n\nIn some cases, you may have a CSV file that does not work the way you expect or a CSV file that you want to validate using an established schema. You can use tools such as CSVLint or Data Curator (from the Queensland Cyber Infrastructure Foundation) to accomplish this task.\n\n\n\nYou can then use st_as_sf() function from the sf package to convert the data frame read into a simple feature object. You must specify the name of the coordinate columns and the expected coordinate reference system. By default, the st_as_sf returns a tibble data frame.\n\nbcps_programs_sf <-\n  st_as_sf(\n    x = bcps_programs_df,\n    coords = c(\"lon\", \"lat\"),\n    crs = 4326\n  )\n\nclass(bcps_programs_sf)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\n\n\nggplot() +\n  geom_sf(data = md_counties[3,]) +\n  geom_sf(data = bcps_programs_sf)\n\n\n\n\nThis function can be tricky for novice users. Missing values in coordinate columns results in an error by default (set na.fail = FALSE to change this).\n\nbcps_programs_df_error <- bcps_programs_df\nbcps_programs_df_error[1, ]$lon <- NA\n\nst_as_sf(\n  x = bcps_programs_df_error,\n  coords = c(\"lon\", \"lat\"),\n  crs = 4326\n)\n\nError in st_as_sf.data.frame(x = bcps_programs_df_error, coords = c(\"lon\", : missing values in coordinates not allowed\n\n\nIf you reverse the order of the latitude and longitude columns, the function returns an sf object—but with the points at incorrect or nonexistent locations.\n\nbcps_programs_coord_rev <-\n  st_as_sf(\n    x = bcps_programs_df,\n    coords = c(\"lat\", \"lon\"),\n    crs = 4326\n  )\n\nggplot() +\n  geom_sf(data = bcps_programs_sf, color = \"green\") +\n  geom_sf(data = bcps_programs_coord_rev, color = \"red\")\n\n\n\n\n\n\n\n\n\n\nLongitude and latitude or latitude and longitude?\n\n\n\n\n\nTom MacWright (creator geojson.io and the OpenStreetMap iD editor) documented the inconsistent order of latitude and longitude across a range of file formats, APIs, and service specifications. If you’re wondering, which order is right, MacWright explains: “Neither. This is an opinion with no right answer. Geographical tradition favors lat, lon. Math and software prefer lon, lat.”\n\n\n\nWorking with other types of tabular data follows a similar work flow.\n\nDate from Excel files (xls or xslx) can be imported using readxl::read_excel. Both readr and readxl work with local file paths or with remote files if you provide a url.\nData from Google Sheets can be accessed with googlesheets4::read_sheet. Google Sheets can be particularly useful when collaborating on a data project with people who can’t use a GIS application or programming language.\nNested data from a JSON file can be read with jsonlite::read_json and converted to a data frame by setting simplifyVector = TRUE.\n\n\n\n\n\n\n\nBeware auto-formatting in Excel\n\n\n\n\n\nThe convenience of automatic formatting in Microsoft Excel can cause with automatic rounding of numeric coordinates and automatic formatting of non-date values as date.\n\n\n\nThe sf package also supports reading Excel and CSV files directly but it returns a tibble (not an sf object) when trying to read data where the geometry is contained in numeric coordinate columns.\n\nbcps_programs_st_read <-\n  st_read(\n    dsn = file,\n    coords = c(\"lon\", \"lat\"),\n    crs = 4326\n  )\n\nReading layer `bcps_programs_SY2122' from data source \n  `/Users/elipousson/Documents/GitHub/bldgspatialdata/files/data/bcps_programs_SY2122.csv' \n  using driver `CSV'\n\n\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n\n\nHowever, st_read does work with a CSV file where the geometry has been encoded as well-known text such as the sample “baltimore_city_wkt.csv” file.\n\ndsn <- here::here(\"files/data\", \"baltimore_city_wkt.csv\")\n\nbaltimore_city <-\n  st_read(\n    dsn = dsn,\n    crs = 4326\n  )\n\nReading layer `baltimore_city_wkt' from data source \n  `/Users/elipousson/Documents/GitHub/bldgspatialdata/files/data/baltimore_city_wkt.csv' \n  using driver `CSV'\nSimple feature collection with 1 feature and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -76.71152 ymin: 39.19721 xmax: -76.52946 ymax: 39.37221\nGeodetic CRS:  WGS 84\n\nggplot() +\n  geom_sf(data = baltimore_city, fill = NA) +\n  theme_minimal()"
  },
  {
    "objectID": "examples/02_read-tabular-data-r.html#read-and-geocode-tabular-data-with-addresses",
    "href": "examples/02_read-tabular-data-r.html#read-and-geocode-tabular-data-with-addresses",
    "title": "Read tabular data and convert to spatial data with R",
    "section": "Read and geocode tabular data with addresses",
    "text": "Read and geocode tabular data with addresses\nWhat if you do not have coordinates? Geocoding address data is a common task and there are many ways to do this using R and a variety of other tools. The easiest package in most cases is the tidygeocoder package. This package supports over a dozen different geocoding services including Nominatim and the US Census Burearu geocoder (which are both free to use without an API key).\nUnfortunately, accurately geocoding address data can be challenging. This toppic is addresed in more detail in the example on cleaning data."
  },
  {
    "objectID": "examples/02_read-tabular-data-r.html#read-tabular-data-and-join-geometry-based-on-a-named-area-or-location",
    "href": "examples/02_read-tabular-data-r.html#read-tabular-data-and-join-geometry-based-on-a-named-area-or-location",
    "title": "Read tabular data and convert to spatial data with R",
    "section": "Read tabular data and join geometry based on a named area or location",
    "text": "Read tabular data and join geometry based on a named area or location\nOne last common way to add geometry to tabular data is to join the table to geometry based on a named area (typically an administrative boundary) or a named location.\n\nfile_url <- \"https://opendata.maryland.gov/api/views/ftsr-vapt/rows.csv\"\n\nmd_foreclosure <- file_url %>%\n  read_csv(show_col_types = FALSE) %>%\n  tidyr::pivot_longer(\n    cols = !contains(\"Zip\"),\n    names_to = \"date\",\n    values_to = \"count\"\n  )\n\nFor data organized by zipcode can be matched to geometry for Zip Code Tabulation Areas (or ZCTAs) downloaded from the U.S. Census Bureau API with the tigris::zcta function and saved to a GeoPackage file “md_zctas.gpkg”. The “Zip” column should be equivalent to the “ZCTA5CE20” column from md_zctas.\n\nmd_zctas <- read_sf(here::here(\"files/data/md_zctas.gpkg\"))\n\nmd_foreclosure <-\n  left_join(\n    md_foreclosure,\n    md_zctas,\n    by = c(\"Zip\" = \"ZCTA5CE20\")\n  )\n\nmd_foreclosure_sf <- st_as_sf(md_foreclosure)\n\nmd_foreclosure_202207 <- filter(md_foreclosure_sf, date == \"July 2022\")\n\nggplot() +\n  geom_sf(data = md_foreclosure_202207, aes(fill = count), color = NA) +\n  geom_sf(data = md_counties, fill = NA, color = \"white\", size = 0.2) +\n  scale_fill_distiller(palette = \"PuRd\") +\n  theme_void() +\n  labs(\n    title = \"Notice of intent to foreclosure by zipcode in Maryland, July 2022\",\n    fill = \"# of notices\",\n    caption = \"Data courtesy Open Maryland\")"
  },
  {
    "objectID": "examples/03_tidy-data-r.html",
    "href": "examples/03_tidy-data-r.html",
    "title": "Tidy data with R",
    "section": "",
    "text": "What does it mean to tidy data? From the Introduction of R for Data Science:\nThere are numerous resources on this topic:"
  },
  {
    "objectID": "examples/03_tidy-data-r.html#pivoting",
    "href": "examples/03_tidy-data-r.html#pivoting",
    "title": "Tidy data with R",
    "section": "Pivoting",
    "text": "Pivoting"
  },
  {
    "objectID": "examples/03_tidy-data-r.html#missing-data",
    "href": "examples/03_tidy-data-r.html#missing-data",
    "title": "Tidy data with R",
    "section": "Missing data",
    "text": "Missing data"
  },
  {
    "objectID": "examples/2022-08-20_notes-on-class-and-assignments.html",
    "href": "examples/2022-08-20_notes-on-class-and-assignments.html",
    "title": "Building Spatial Data",
    "section": "",
    "text": "Reading data\nWriting data\nEditing data\nExploring data\nTidying data\nTransforming, restructuring, and summarizing data\nDocumenting data\nPublishing data\nCollecting data from people, sensors, or imagery\nCritiquing data\nDesigning a dataset"
  },
  {
    "objectID": "examples/2022-08-20_notes-on-class-and-assignments.html#final-project-ideas",
    "href": "examples/2022-08-20_notes-on-class-and-assignments.html#final-project-ideas",
    "title": "Building Spatial Data",
    "section": "Final project ideas",
    "text": "Final project ideas\n\nConvert a non-digital or inaccessible source into open data\n\nGeo-referencing a historic map\nTracing features from a geo-referenced historic map\nExtracting a table from a PDF\nGeoreference an image map\n\nEvaluate and document existing open data source or standard\nDocument a reproducible workflow for open data\nContribute to a real data public\n\nReport issues (e.g. damaged access ramps, out street lights, trash) to Baltimore 311 and track responses\nContribute edits or new features to Open Street Map\nRequest and share data from a public agency using MPIA or FOIA\n\nExplore data about you and your community\n\nAnalyze data you share through social media or location tracking services"
  },
  {
    "objectID": "examples/index.html",
    "href": "examples/index.html",
    "title": "Examples",
    "section": "",
    "text": "Learn to read tabular data with R, convert to spatial data with the sf package, and clean data with the dplyr and tidy packages.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLearn to use address geocoding, data cleaning, and other\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "guide.html",
    "href": "guide.html",
    "title": "Guide",
    "section": "",
    "text": "This course guide provides additional information."
  },
  {
    "objectID": "guide.html#running-code",
    "href": "guide.html#running-code",
    "title": "Guide",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Building Spatial Data",
    "section": "",
    "text": "::: home ::: {.grid .course-details} ::: {.g-col-12 .g-col-sm-6 .g-col-md-4} ### Instructor\n\n   Eli Pousson\n\n   eli.pousson@umbc.edu\n   elipousson\n   Schedule an appointment :::\n\n\nCourse details\n\n   Wednesdays\n   August 31 – December 7, 2022\n   6:30–8:00 PM\n   Sondheim Hall 001 (Cartography Lab)\n   Discord\n\n\n\nContacting me\nPlease contact me by email and I will get back to you with one to two days.\n\n:::"
  },
  {
    "objectID": "resources/data.html",
    "href": "resources/data.html",
    "title": "Data sources",
    "section": "",
    "text": "Spatial data is available in a wide range of formats:"
  },
  {
    "objectID": "resources/data.html#local-data-sources-for-baltimore-and-maryland",
    "href": "resources/data.html#local-data-sources-for-baltimore-and-maryland",
    "title": "Data sources",
    "section": "Local data sources for Baltimore and Maryland 🦀",
    "text": "Local data sources for Baltimore and Maryland 🦀\n\nBaltimore City Open Data Hub\nBMC Regional GIS Data Center - Baltimore Metropolitan Council\nChesapeake Bay Open Data Portal\nMaryland’s GIS Data Catalog\nMaryland Open Data\nVital Signs Open Data Portal\nMaryland Food Systems Open Data Portal"
  },
  {
    "objectID": "resources/data.html#national-data-sources-for-the-u.s.",
    "href": "resources/data.html#national-data-sources-for-the-u.s.",
    "title": "Data sources",
    "section": "National data sources for the U.S. 🇺🇸",
    "text": "National data sources for the U.S. 🇺🇸\n\nU.S. Department of Housing and Urban Development Geospatial Data Storefront\nGeospatial at BTS (Bureau of Transportation Statistics), U.S. Department of Transportation\nBTS Data Inventory (Bureau of Transportation Statistics), U.S. Department of Transportation\nU.S. Geological Survey Science Data Catalog\nGeoPlatform.gov\nNational Ecological Observatory Network (NEON) Data Portal\nOpen Data Network (Socrata/Tyler Technologies)\nUrban Institute Data Catalog"
  },
  {
    "objectID": "resources/data.html#global-data-sources",
    "href": "resources/data.html#global-data-sources",
    "title": "Data sources",
    "section": "Global data sources 🌏",
    "text": "Global data sources 🌏\n\nNatural Earth (see rnaturalearth 📦to access Natural Earth data) \nOpenStreetMap (see the OSM Wiki for more on how data is organized on OSM)\nArcGIS Living Atlas of the World (see esri2sf 📦to access ArcGIS FeatureServer data)\nNASA Open Data Portal\nNOAA Data Discovery Portal\nWorld Bank Open Data\nHumanitarian Data Exchange\nData Portals (Open Knowledge Foundation) (see RSocrata for Socrata or ckanr for CKAN data portals)"
  },
  {
    "objectID": "resources/index.html",
    "href": "resources/index.html",
    "title": "Resources",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "resources/qgis.html",
    "href": "resources/qgis.html",
    "title": "Using QGIS",
    "section": "",
    "text": "Read the Desktop User Guide/Manual\nFollow the tutorials in the QGIS Training manual\nLearn GIS basics in A gentle introduction in GIS"
  },
  {
    "objectID": "resources/qgis.html#introductory-resources",
    "href": "resources/qgis.html#introductory-resources",
    "title": "Using QGIS",
    "section": "Introductory resources 🐣",
    "text": "Introductory resources 🐣\n\nExplore QGIS Tutorials and Tips from Ujaval Gandhi\nIntroduction to QGIS from Spatial Thoughts (Ujaval Gandhi)"
  },
  {
    "objectID": "resources/qgis.html#getting-help-with-qgis",
    "href": "resources/qgis.html#getting-help-with-qgis",
    "title": "Using QGIS",
    "section": "Getting help with QGIS 🆘",
    "text": "Getting help with QGIS 🆘\n\nAsk qgis Questions on StackOverflow"
  },
  {
    "objectID": "resources/qgis.html#recommended-qgis-plugins",
    "href": "resources/qgis.html#recommended-qgis-plugins",
    "title": "Using QGIS",
    "section": "Recommended QGIS plugins 🔌",
    "text": "Recommended QGIS plugins 🔌\nPlugins are optional for working with spatial data in QGIS but recommended for ease of use and convenience. Plugins are written and published by individual volunteers, government agencies, and private geospatial consultants. The following table lists a selection of recommended plugins you may want to install.\n\n\n\nPlugin\nSource\n\n\n\n\nQuickMapServices by NextGIS\nrepo\n\n\nQGIS Resource Sharing by Akbar Gumbira, Håvard Tveite, and Julien Moura\nrepo\n\n\nQGIS OpenLayers Plugin by Sourcepole\nrepo\n\n\nProcessing R Provider by North Road\nrepo\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nLearn more about installing QGIS plugins or writing your own QGIS Processing plugin (recommended for beginners) or QGIS Python plugin (recommended for advanced users)."
  },
  {
    "objectID": "resources/qgis.html#customizing-qgis",
    "href": "resources/qgis.html#customizing-qgis",
    "title": "Using QGIS",
    "section": "Customizing QGIS 🎨",
    "text": "Customizing QGIS 🎨\nStyle"
  },
  {
    "objectID": "resources/r-spatial.html",
    "href": "resources/r-spatial.html",
    "title": "Using R and sf for spatial data",
    "section": "",
    "text": "Note\n\n\n\n\n\nThis resource provides a reference on using R for spatial data. Read the resource guide on using R and RStudio for more general information."
  },
  {
    "objectID": "resources/r-spatial.html#about-r-and-spatial-data",
    "href": "resources/r-spatial.html#about-r-and-spatial-data",
    "title": "Using R and sf for spatial data",
    "section": "About R and spatial data 📋",
    "text": "About R and spatial data 📋"
  },
  {
    "objectID": "resources/r-spatial.html#about-sf-package",
    "href": "resources/r-spatial.html#about-sf-package",
    "title": "Using R and sf for spatial data",
    "section": "About sf package 🌐",
    "text": "About sf package 🌐\nfrom sf website\n\ninterfaces to GEOS for geometrical operations on projected coordinates, and to s2geometry for geometrical operations on ellipsoidal coordinates\ninterfaces to GDAL, supporting all driver options, Date and POSIXct and list-columns\ninterfaces to PRØJ for coordinate reference system conversion and transformation\nuses well-known-binary serialisations written in C++/Rcpp for fast I/O with GDAL and GEOS\nreads from and writes to spatial databases such as PostGIS using DBI\nis extended by lwgeom for selected liblwgeom/PostGIS functions\nis extended by stars for raster data, and raster or vector data cubes (spatial time series)"
  },
  {
    "objectID": "resources/r-spatial.html#introductory-resources",
    "href": "resources/r-spatial.html#introductory-resources",
    "title": "Using R and sf for spatial data",
    "section": "Introductory resources 🐣",
    "text": "Introductory resources 🐣"
  },
  {
    "objectID": "resources/r-spatial.html#getting-help",
    "href": "resources/r-spatial.html#getting-help",
    "title": "Using R and sf for spatial data",
    "section": "Getting help 🆘",
    "text": "Getting help 🆘"
  },
  {
    "objectID": "resources/r-spatial.html#r-packages-for-spatial-data",
    "href": "resources/r-spatial.html#r-packages-for-spatial-data",
    "title": "Using R and sf for spatial data",
    "section": "R packages for spatial data 📦",
    "text": "R packages for spatial data 📦"
  },
  {
    "objectID": "resources/r.html",
    "href": "resources/r.html",
    "title": "Using R and RStudio Desktop",
    "section": "",
    "text": "R is a statistical programming language that supports a wide range of data analysis, processing, and visualization activities.\nAdditional documentation:\n\nR Project Documentation\nThe R Manuals (Re-styled by RStudio)"
  },
  {
    "objectID": "resources/r.html#about-rstudio",
    "href": "resources/r.html#about-rstudio",
    "title": "Using R and RStudio Desktop",
    "section": "About RStudio 📋",
    "text": "About RStudio 📋\nMost people who work with R use an IDE (or integrated development environment) to write, execute, and test code. For this course, we recommend using the free, open-source RStudio Desktop application.\nAdditional documentation:\n\nRStudio IDE Cheatsheet\n\n\nCustomizing RStudio 🎨\nCustomizing the RStudio IDE\n\n\nAlternatives to RStudio 🧰\nOne popular alternatives include Visual Studio Code (using the R extension and other additions).\nIndividuals who prefer a command line interface may use GNU Emacs (using the ESS plugin) or Vim (using the Nvim-R plugin)."
  },
  {
    "objectID": "resources/r.html#introductory-resources",
    "href": "resources/r.html#introductory-resources",
    "title": "Using R and RStudio Desktop",
    "section": "Introductory resources 🐣",
    "text": "Introductory resources 🐣\nThe RStudio Cheatsheets are one-page printable quick reference sheets created by RStudio staff and contributed by volunteers. You may want to print out the following cheatsheets for a convenient reminder on keyboard shortcuts, useful functions, and typical workflows:\n\nsf\ndplyr\ntidyr\nggplot2\n\nBasics of working with R at the command line and RStudio goodies (from STAT 545 by Jenny Bryan and the STAT 545 TAs)\nR for Data Science (R4DS) by Hadley Wickham and Garrett Grolemund\n“This book will teach you how to do data science with R: You’ll learn how to get your data into R, get it into the most useful structure, transform it, visualise it and model it. In this book, you will find a practicum of skills for data science.”\nD-Lab’s R Fundamentals Workshop: “a broad overview of the fundamentals of using R, a programming language geared toward statistical analysis and data science.”"
  },
  {
    "objectID": "resources/r.html#getting-help",
    "href": "resources/r.html#getting-help",
    "title": "Using R and RStudio Desktop",
    "section": "Getting help 🆘",
    "text": "Getting help 🆘\n\nRStudio Community"
  },
  {
    "objectID": "resources/r.html#r-packages-for-this-course",
    "href": "resources/r.html#r-packages-for-this-course",
    "title": "Using R and RStudio Desktop",
    "section": "R packages for this course 📦",
    "text": "R packages for this course 📦\nUnlike plugins for QGIS, packages are effectively required to work with spatial data in R. The following table lists the key packages we use most often during this course.\nThis list is not comprehensive. Other packages that are relevant for one specific section of the course will be noted elsewhere in the provided course materials and the packages for spatial data analysis are described in more detail on the resource page for Using R for spatial data."
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Each session includes information on:\n\nAssignments due: Assignments are due by 11:59 PM on the day they’re listed unless otherwise noted.\nTopics: A listing of the topics, questions, or skills that we expect to focus on during each course session. As of August 2022, these topics are tentative and may change during the first few weeks of the course.\nExamples: Annotated R code and other supplementary information you can use as a reference for the session topics. These examples may include external links to package vignettes for R packages we are using during the session.\nReadings: Readings for this class include both material on how to work with spatial data in R and QGIS and material on broader considerations around working with data and how spatial data is collected, organized, and shared. Most selected readings are freely available online but, for some, you may need to use the UMBC Library Books and Media Search or AOK Article Search to locate.\nAdditional references: Optional material (including readings and videos) that you are encouraged to use as a reference but you are not required to review before class."
  },
  {
    "objectID": "schedule.html#setup",
    "href": "schedule.html#setup",
    "title": "Schedule",
    "section": "Setup",
    "text": "Setup\nTo participate in this class, you need to have access to a laptop with a few applications installed: R, RStudio, and QGIS. You also need to set up a GitHub account. I’ve gathered a few resources with step-by-step instructions on how to install these applications along with some introductory material for any students who has no or limited prior experience with a desktop GIS or a programing language like R.\nTo install QGIS and get an introduction to the interface (if you do not have prior experience with a desktop GIS application), please review:\n\n5. Getting started in QGIS project “QGIS Desktop User Guide/Manual (QGIS 3.22),” August 24, 2022, https://docs.qgis.org/3.22/en/docs/user_manual/index.html.\nCh. 1 Where Do I Start? in Andrew Cutts and Anita Graser Learn QGIS: Your Step-by-Step Guide to the Fundamental of QGIS 3.4, Fourth edition. (Birmingham: Packt, 2018). (available via UMBC Library)\n\nTo install R and RStudio and get an introduction to how R works, please review:\n\nCh. 1 Install R and RStudio and Ch. 2 R Basics and Workflows in Jenny Bryan and The STAT 545 TAs STAT 545: Data Wrangling, Exploration, and Analysis with R, 2019, https://stat545.com/.\n\nTo set up GitHub account and learn how to connect your account to RStudio, please review:\n\nInstallation and Connect Git, GitHub, RStudio from Jenny Bryan, the STAT 545 TAs, and Jim Hester Happy Git and GitHub for the useR, accessed August 28, 2022, https://happygitwithr.com/."
  },
  {
    "objectID": "schedule.html#taking-care-with-data-aug.-31",
    "href": "schedule.html#taking-care-with-data-aug.-31",
    "title": "Schedule",
    "section": "1. Taking care with data – Aug. 31",
    "text": "1. Taking care with data – Aug. 31\n\nTopics\n\nWhat are we doing in this course?\nHow is spatial data structured?\nHow can we take a critical approach to working with data?\n\n\n\nReadings\n\nCh. 1 Local Origins in Yanni Alexander Loukissas All Data Are Local: Thinking Critically in a Data-Driven Society, 2019, doi:10.7551/mitpress/11543.001.0001.\nCh. 1 Introduction in Robin Lovelace, Jakub Nowosad, and Jannes Muenchow Geocomputation with R, 2nd (WIP)., 2022, https://geocompr.robinlovelace.net/.\n\n\n\nAdditional references\n\nJer Thorp “Turning Data Around,” November 18, 2016, https://medium.com/memo-random/turning-data-around-7acea1f7479c.\nDawn J. Wright, Michael F. Goodchild, and James D. Proctor “Demystifying the Persistent Ambiguity of GIS as ‘Tool’ Versus ‘Science’,” Annals of the Association of American Geographers 87, no. 2 (June 1997): 346–362, doi:10.1111/0004-5608.872057."
  },
  {
    "objectID": "schedule.html#accessing-and-visualizing-spatial-data-sept.-7",
    "href": "schedule.html#accessing-and-visualizing-spatial-data-sept.-7",
    "title": "Schedule",
    "section": "2. Accessing and visualizing spatial data – Sept. 7",
    "text": "2. Accessing and visualizing spatial data – Sept. 7\n\nAssignments due\n\nFind spatial data\nSet up a GitHub account\n\n\n\nTopics\n\nUsing best practices for file naming and organization\nUsing R and QGIS to support project management\nReading and writing common spatial data file formats in R and QGIS\nConverting tabular data into spatial data\n\n\n\nExamples\n\nRead and filter spatial data with R\nRead tabular data and convert to spatial data with R\n\n\n\nReadings\n\nCh. 2 A Place for Plant Data in Loukissas All Data Are Local.\nCh. 2 Geographic data in R in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nCh. 2 Data Creation and Editing in Cutts and Graser Learn QGIS. (available via UMBC Library)\nCatherine D’Ignazio and Lauren Klein “Who Collects the Data? A Tale of Three Maps,” MIT Case Studies in Social and Ethical Responsibilities of Computing no. Winter 2021 (February 5, 2021), doi:10.21428/2c646de5.fc6a97cc.\nMel Moreno and Mathieu Basille “Drawing Beautiful Maps Programmatically with R, sf and ggplot2 — Part 1: Basics,” October 25, 2018, https://r-spatial.org/r/2018/10/25/ggplot2-sf.html. (continue with Part 2: Layers and Part 3: Layouts)\n\n\n\nAdditional references\n\nCh. 9 Making maps with R in Lovelace, Nowosad, and Muenchow Geocomputation with R.\n\nTom MacWright “More Than You Ever Wanted to Know about GeoJSON,” March 23, 2015, https://macwright.com/2015/03/23/geojson-second-bite.html.\nJakub Nowosad and Martijn Tennekes Elegant and Informative Maps with Tmap, 2021, https://r-tmap.github.io/tmap-book/.\nHadley Wickham, Danielle Navarro, and Thomas Lin Pedersen Ggplot2: Elegant Graphics for Data Analysis, 3rd (WIP)., Use R! (Springer, 2022), https://ggplot2-book.org/index.html."
  },
  {
    "objectID": "schedule.html#exploring-and-transforming-attributes-sept.-14",
    "href": "schedule.html#exploring-and-transforming-attributes-sept.-14",
    "title": "Schedule",
    "section": "3. Exploring and transforming attributes – Sept. 14",
    "text": "3. Exploring and transforming attributes – Sept. 14\n\nTopics\n\nBasics of visualizing qualitative and quantitative data\nSubsetting or filtering based on attributes\nSummarizing attribute data\n\n\n\nExamples\n\nMapping data by attributes in R\nMapping data by attribute in QGIS\n\n\n\nReadings\n\nCh. 3 Collecting Infrastructures in Loukissas All Data Are Local.\nCh. 3 Attribute data operations in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nCh. 5 Data transformation in Hadley Wickham and Garrett Grolemund R for Data Science: Import, Tidy, Transform, Visualize, and Model Data, 2nd edition (WIP). (Sebastopol, CA: O’Reilly Media, 2022), https://r4ds.had.nz.\n\n\n\nAdditional references\n\nCh. 6 Efficient data carpentry in Colin Gillespie and Robin Lovelace Efficient R Programming (O’Reilly Media, 2021), https://csgillespie.github.io/efficientR/."
  },
  {
    "objectID": "schedule.html#exploring-and-modifying-geometry-sept.-21",
    "href": "schedule.html#exploring-and-modifying-geometry-sept.-21",
    "title": "Schedule",
    "section": "4. Exploring and modifying geometry – Sept. 21",
    "text": "4. Exploring and modifying geometry – Sept. 21\n\nAssignments due\n\nRead spatial data and make a map with QGIS\nRead spatial data and make a map with R and ggplot2\n\n\n\nTopics\n\nUsing geometry operations in exploratory data analysis\nUsing spatial joins to combine data sets\nBasic introduction to creating geometry with QGIS, mapedit, or geojson.io\n\n\n\nReadings\n\nCh. 4 Spatial data operations and Ch. 5 Geometry operations in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nCh. 7 Exploratory Data Analysis in Wickham and Grolemund R for Data Science."
  },
  {
    "objectID": "schedule.html#documenting-data-and-workflows-sept.-28",
    "href": "schedule.html#documenting-data-and-workflows-sept.-28",
    "title": "Schedule",
    "section": "5. Documenting data and workflows – Sept. 28",
    "text": "5. Documenting data and workflows – Sept. 28\n\n\n\n\n\n\nThis session features a guest speaker, Reina Chano Murray, Geospatial Data Curator and Applications Administrator, Johns Hopkins Sheridan Libraries, sharing her perspective on documentation and archiving spatial data.\n\n\n\n\nAssignment due\n\nDocument a data set\n\n\n\nTopics\n\nUnderstanding open licensing\nDocumentation for data and data analysis workflows\nPlanning for reproducible spatial data analysis\n\n\n\nReadings\n\nCh. 7 Show Your Work in Catherine D’Ignazio and Lauren F. Klein Data Feminism (The MIT Press, 2020), doi:10.7551/mitpress/11805.001.0001.\nJennifer Bryan “How to Name Files” (May 14, 2015), https://speakerdeck.com/jennybc/how-to-name-files.\n\n\n\nAdditional references\n\nTahu Kukutai and Maggie Walter “Indigenous Data Sovereignty: Implications for Data Journalism,” in The Data Journalism Handbook: Towards a Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 65–73, doi:10.5117/9789462989511_ch09.\nNatalia Mazotte “Working Openly in Data Journalism,” in The Data Journalism Handbook: Towards a Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138–142, doi:10.5117/9789462989511_ch20.\nGreg Wilson et al. “Good Enough Practices in Scientific Computing,” PLOS Computational Biology 13, no. 6 (June 22, 2017): e1005510, doi:10.1371/journal.pcbi.1005510."
  },
  {
    "objectID": "schedule.html#tidying-and-validating-data-oct.-5",
    "href": "schedule.html#tidying-and-validating-data-oct.-5",
    "title": "Schedule",
    "section": "6. Tidying and validating data – Oct. 5",
    "text": "6. Tidying and validating data – Oct. 5\n\n\n\n\n\n\nThis session is the same day as the Jewish holiday of Yom Kippur so I plan to hold class remotely at a different date and time (to be determined). I plan to make the full recording for this session available to students who are unable to attend the remote session.\n\n\n\n\nAssignment due\n\nGeocode tabular address data with R\n\n\n\nTopics\n\nChanging data from wide and long formats\nTidying address data and categorical data\nGeocoding address data\nChecking for errors or issues in location data\n\n\n\nReadings\n\nCh. 12 Tidy data in Wickham and Grolemund R for Data Science.\nEmily Riederer “Column Names as Contracts,” September 6, 2020, https://emilyriederer.netlify.app/post/column-name-contracts/."
  },
  {
    "objectID": "schedule.html#getting-data-from-open-data-portals-oct.-12",
    "href": "schedule.html#getting-data-from-open-data-portals-oct.-12",
    "title": "Schedule",
    "section": "7. Getting data from open data portals – Oct. 12",
    "text": "7. Getting data from open data portals – Oct. 12\n\nTopics\n\nGetting data from open data portals (ArcGIS and Socrata)\nChallenges of working with administrative data\n\n\n\nReadings\n\nCh. 5 Market, Place, Interface in Loukissas All Data Are Local.\nCh. 8 Geographic data I/O in Lovelace, Nowosad, and Muenchow Geocomputation with R.\nDan Bouk, Kevin Ackermann, and danah boyd A Primer on Powerful Numbers: Selected Readings in the Social Study of Public Data and Official Numbers, March 23, 2022, https://datasociety.net/library/a-primer-on-powerful-numbers-selected-readings-in-the-social-study-of-public-data-and-official-numbers/."
  },
  {
    "objectID": "schedule.html#getting-data-from-documents-and-images-oct.-19",
    "href": "schedule.html#getting-data-from-documents-and-images-oct.-19",
    "title": "Schedule",
    "section": "8. Getting data from documents and images – Oct. 19",
    "text": "8. Getting data from documents and images – Oct. 19\n\nAssignment due\n\nComplete an exploratory analysis of a public data set with R\n\n\n\nTopics\n\nGeoreferencing with QGIS, Mapwarper, or Allmaps\nExtracting locations from EXIF metadata\n\n\n\nReadings\n\nCh. 6 Models of Local Practice in Loukissas All Data Are Local.\nJosh Hadro “Manufacturing Impact: Why We Digitize,” November 6, 2017, https://www.nypl.org/blog/2017/11/06/manufacturing-impact-digitize.\n\n\n\nAdditional references\n\nDavid Medeiros “Georeferencing in QGIS,” April 22, 2022, https://storymaps.arcgis.com/stories/e8d1d13ca8894643970f315d16010ee9."
  },
  {
    "objectID": "schedule.html#getting-data-from-people-oct.-26",
    "href": "schedule.html#getting-data-from-people-oct.-26",
    "title": "Schedule",
    "section": "9. Getting data from people – Oct. 26",
    "text": "9. Getting data from people – Oct. 26\n\nAssignment due\n\nGeoreference a historic map with QGIS\n\n\n\nReadings\n\nCh. 7 Local Ends in Loukissas All Data Are Local.\nLam Thuy Vo “Telling Stories With the Social Web,” in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138–142, doi:10.2307/j.ctv1qr6smr.35.\nTaylor Shelton “Spatialities of Data: Mapping Social Media ’Beyond the Geotag’,” GeoJournal 82, no. 4 (2017): 721–734, doi:10.1007/s10708-016-9713-3."
  },
  {
    "objectID": "schedule.html#getting-data-from-sensors-satellites-and-other-sources-oct.-26",
    "href": "schedule.html#getting-data-from-sensors-satellites-and-other-sources-oct.-26",
    "title": "Schedule",
    "section": "10. Getting data from sensors, satellites, and other sources – Oct. 26",
    "text": "10. Getting data from sensors, satellites, and other sources – Oct. 26\n\nAssignment due\n\nSubmit draft project proposal"
  },
  {
    "objectID": "schedule.html#collaborating-with-local-and-online-communities-nov.-2",
    "href": "schedule.html#collaborating-with-local-and-online-communities-nov.-2",
    "title": "Schedule",
    "section": "11. Collaborating with local and online communities – Nov. 2",
    "text": "11. Collaborating with local and online communities – Nov. 2\n\n\n\n\n\n\nThis session (tentatively) features a guest speaker, Elliott Plack, Technical Project Manager, Whitney Bailey Cox & Magnani, LLC, sharing an introduction to OpenStreetMap, his experience as an OSM admin, and perspective on spatial data as a member of the Maryland Council on Open Data.\n\n\n\n\nAssignment due\n\nMake an interactive map with R\n\n\n\nReadings\n\nEmily Talen “Bottom-up GIS,” Journal of the American Planning Association 66, no. 3 (2000): 279, doi:10.1080/01944360008976107.\nPeter Mooney and Marco Minghini “A Review of OpenStreetMap Data,” in Mapping and the Citizen Sensor, ed. Peter Mooney et al. (Ubiquity Press, 2017), 37–60, http://www.jstor.org/stable/j.ctv3t5qzc.6.\nC. E. Dunn “Participatory GIS - a People’s GIS?” PROGRESS IN HUMAN GEOGRAPHY 31 (January 1, 2007): 616–637, http://proxy-bc.researchport.umd.edu/login?url=https://search.ebscohost.com/login.aspx?direct=true&AuthType=ip,url,uid&db=edsbl&AN=RN217595743&site=eds-live&scope=site."
  },
  {
    "objectID": "schedule.html#contributing-to-openstreetmap-nov.-9",
    "href": "schedule.html#contributing-to-openstreetmap-nov.-9",
    "title": "Schedule",
    "section": "12. Contributing to OpenStreetMap – Nov. 9",
    "text": "12. Contributing to OpenStreetMap – Nov. 9\n\n\n\n\n\n\nThis session (tentatively) features a workshop on editing OpenStreetMap led by Elliott Plack. Participation in the workshop is equivalent to a completed assignment. Students who are unable to participate in the workshop can share a record of contributions to OpenStreetMap for equivalent credit.\n\n\n\n\nReadings\n\nGeoff Boeing “The Right Tools for the Job: The Case for Spatial Science Tool-Building,” Transactions in GIS 24, no. 5 (October 2020): 1299–1314, doi:10.1111/tgis.12678."
  },
  {
    "objectID": "schedule.html#sharing-data-on-the-web-nov.-16",
    "href": "schedule.html#sharing-data-on-the-web-nov.-16",
    "title": "Schedule",
    "section": "13. Sharing data on the web – Nov. 16",
    "text": "13. Sharing data on the web – Nov. 16\n\nTopics\n\nUsing Mapbox Studio for map design\nPublishing websites with Quarto\n\n\n\nReadings\n\nRob Kitchin and Tracey P. Lauriault “Small Data in the Era of Big Data,” GeoJournal 80, no. 4 (2015): 463–475, doi:10.1007/s10708-014-9601-7.\nElliot Bentley “The Web as Medium for Data Visualization,” in The Data Journalism Handbook: Towards A Critical Data Practice, ed. Liliana Bounegru and Jonathan Gray, 2nd ed. (Amsterdam University Press, 2021), 138–142, doi:10.2307/j.ctv1qr6smr_ch26."
  },
  {
    "objectID": "schedule.html#project-work-session-nov.-23",
    "href": "schedule.html#project-work-session-nov.-23",
    "title": "Schedule",
    "section": "14. Project work session – Nov. 23",
    "text": "14. Project work session – Nov. 23\n\n\n\n\n\n\nThis session is the day before the Thanksgiving holiday and may conflict with travel for class participants. Instead of a session at the scheduled time, I plan to host a remote session at a different date and time (to be determined). This session will focus on sharing updates and support for the final project. The session will not be recorded but notes will be shared with any students who are unable to participate."
  },
  {
    "objectID": "schedule.html#special-topics-in-spatial-data-nov.-30",
    "href": "schedule.html#special-topics-in-spatial-data-nov.-30",
    "title": "Schedule",
    "section": "15. Special topics in spatial data – Nov. 30",
    "text": "15. Special topics in spatial data – Nov. 30\n\n\n\n\n\n\nThere are a wide range of special topics that we could cover in this course but we don’t have time to cover them all. This session is a place-holder to dig deeper into a special topic based on the interests of students in the course. Possible topics could include working with spatial network data using sfnetworks, working with time series data using the QGIS temporal controller feature, visualizing elevation data using the rayshader package, or something more. We will finalize the topic for this session by the end of the first section of the course in early October."
  },
  {
    "objectID": "schedule.html#final-project-review-dec.-7",
    "href": "schedule.html#final-project-review-dec.-7",
    "title": "Schedule",
    "section": "16. Final project review – Dec. 7",
    "text": "16. Final project review – Dec. 7\n\n\n\n\n\n\nThis session will be dedicated to students sharing individual and collaborative work completed for the final project. Additional details on the final project will be shared with students prior to the end of the first section of the course in early October."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "GES660: Building Spatial Datasets",
    "section": "",
    "text": "Date 📅\n\nAugust 31 – December 7, 2022\n\nTime ⏰\n\nWednesdays, 6:00 pm to 8:30 pm\n\nLocation 📍\n\nJanet & Walter Sondheim Hall 001 (Cartography Lab), University of Maryland, Baltimore County, 1099 Hilltop Road, Baltimore, MD 21250"
  },
  {
    "objectID": "syllabus.html#about-this-course",
    "href": "syllabus.html#about-this-course",
    "title": "GES660: Building Spatial Datasets",
    "section": "About this course",
    "text": "About this course\nIn this course, students will learn how to find, understand, and work with spatial data for research and practice. This course leverages open-source tools, online educational resources, and real-world data from urban environments to help students build a methodological framework for academic and professional work with spatial data now and in the future.\nThe course explores the process of building and maintaining data sets about local places and prepares students to navigate critical issues including open data licensing, location accuracy, data “cleaning”, and privacy considerations. Assignments and readings will introduce students to the range of practical uses for spatial data in planning, public policy, and advocacy around housing, health, transportation, the environment, and more.\nStudents in the course will learn to work with common file formats (e.g. GeoJSON, GeoPackage) and web services (e.g. FeatureServer, APIs) and how to read, write, document, and share data using GIS applications (QGIS), web applications (Mapbox or ArcGIS Online), and programming languages (R or Python).\n\n\n\n\n\n\nThis course does not require any prior experience with desktop GIS software or R programming. Assignments will require students to use R, RStudio, and QGIS during the course. Optional resources on working with spatial data using ArcGIS Online or Python will be provided where feasible. Students will be required to use GitHub in order to share completed assignments and develop their professional portfolios."
  },
  {
    "objectID": "syllabus.html#schedule",
    "href": "syllabus.html#schedule",
    "title": "GES660: Building Spatial Datasets",
    "section": "Schedule",
    "text": "Schedule\nOverall, this course is divided into three sections:\n\n\n\n\n\n\n\nSection\nTopics\nSessions/Dates\n\n\n\nGetting started with spatial data\nIntroduction to using R, sf, and QGIS to work with vector, raster, and tabular data\n1 (Aug. 31) – 6 (Oct. 5)\n\n\nBuilding and sharing spatial data\nDownloading and manipulating spatial data from Socrata, ArcGIS, OpenStreetMap, and other sources using R and collaborating with others\n7 (Oct. 12) – 13 (Nov. 16)\n\n\nSpecial topics and final project\nUse local data sources related to housing, transportation, community development, or related topics to work on a collaborative data project\n13 (Nov. 23) – 15 (Dec. 7)\n\n\n\nA more detailed outline of recommended readings is included in the course manual."
  },
  {
    "objectID": "syllabus.html#assignments",
    "href": "syllabus.html#assignments",
    "title": "GES660: Building Spatial Datasets",
    "section": "Assignments",
    "text": "Assignments\nDetails to come."
  },
  {
    "objectID": "syllabus.html#evaluation",
    "href": "syllabus.html#evaluation",
    "title": "GES660: Building Spatial Datasets",
    "section": "Evaluation",
    "text": "Evaluation\nDetails to come."
  },
  {
    "objectID": "syllabus.html#diversity-statement-on-respect",
    "href": "syllabus.html#diversity-statement-on-respect",
    "title": "GES660: Building Spatial Datasets",
    "section": "Diversity Statement on Respect",
    "text": "Diversity Statement on Respect\nStudents in this class are encouraged to speak up and participate during class meetings. Because the class will represent a diversity of individual beliefs, backgrounds, and experiences, every member of this class must show respect for every other member of this class.\nFrom California State University, Chico’s Office of Diversity and Inclusion."
  },
  {
    "objectID": "syllabus.html#accessibility-and-disability-accommodations-guidance-and-resources",
    "href": "syllabus.html#accessibility-and-disability-accommodations-guidance-and-resources",
    "title": "GES660: Building Spatial Datasets",
    "section": "Accessibility and Disability Accommodations, Guidance and Resources",
    "text": "Accessibility and Disability Accommodations, Guidance and Resources\nAccommodations for students with disabilities are provided for all students with a qualified disability under the Americans with Disabilities Act (ADA & ADAAA) and Section 504 of the Rehabilitation Act who request and are eligible for accommodations. The Office of Student Disability Services (SDS) is the UMBC department designated to coordinate accommodations that creates equal access for students when barriers to participation exist in University courses, programs, or activities.\nIf you have a documented disability and need to request academic accommodations in your courses, please refer to the SDS website at sds.umbc.edu for registration information and office procedures.\n\nSDS email: disAbility@umbc.edu\nSDS phone: 410-455-2459\n\nIf you will be using SDS approved accommodations in this class, please contact the instructor to discuss implementation of the accommodations. During remote instruction requirements due to COVID, communication and flexibility will be essential for success."
  },
  {
    "objectID": "syllabus.html#sexual-assault-sexual-harassment-and-gender-based-violence-and-discrimination",
    "href": "syllabus.html#sexual-assault-sexual-harassment-and-gender-based-violence-and-discrimination",
    "title": "GES660: Building Spatial Datasets",
    "section": "Sexual Assault, Sexual Harassment, and Gender Based Violence and Discrimination",
    "text": "Sexual Assault, Sexual Harassment, and Gender Based Violence and Discrimination\nUMBC Policy and Federal law (Title IX) prohibit discrimination and harassment on the basis of sex, sexual orientation, and gender identity in University programs and activities. Any student who is impacted by sexual harassment, sexual assault, domestic violence, dating violence, stalking, sexual exploitation, gender discrimination, pregnancy discrimination, gender-based harassment or retaliation should contact the University’s Title IX Coordinator to make a report and/or access support and resources:\n\nMorgan Thomas, Acting Director and Title IX Coordinator\n410-455-1354 (direct line), morganthomas@umbc.edu\n\nYou can access support and resources even if you do not want to take any further action. You will not be forced to file a formal complaint or police report. Please be aware that the University may take action on its own if essential to protect the safety of the community.\nIf you are interested in or thinking about making a report, please use the Online Reporting/Referral Form. Please note that, if you report anonymously,  the University’s ability to respond will be limited.\n\n\n\n\n\n\nFaculty are Responsible Employees with Mandatory Reporting Obligations\n\n\n\nAll faculty members are considered Responsible Employees, per UMBC’s Policy on Sexual Misconduct, Sexual Harassment, and Gender Discrimination. Faculty are therefore required to report any/ all available information regarding conduct falling under the Policy and violations of the Policy to the Title IX Coordinator, even if a student discloses an experience that occurred before attending UMBC and/or an incident that only involves people not affiliated with UMBC.  Reports are required regardless of the amount of detail provided and even in instances where support has already been offered or received.\nWhile faculty members want encourage you to share information related to your life experiences through discussion and written work, students should understand that faculty are required to report past and present sexual assault, domestic and interpersonal violence, stalking, and gender discrimination that is shared with them to the Title IX Coordinator so that the University can inform students of their rights, resources and support.  While you are encouraged to do so, you are not obligated to respond to outreach conducted as a result of a report to the Title IX Coordinator.\nIf you need to speak with someone in confidence, who does not have an obligation to report to the Title IX Coordinator, UMBC has a number of Confidential Resources available to support you:\n\nThe Counseling Center (Main Campus): 410-455-2472 / After-Hours 410-455-3230 [Monday – Friday; 8:30 a.m. – 5 p.m.]\nCenter for Counseling and Consultation (Shady Grove Campus): 301-738-6273 (Messages checked hourly) Online Appointment Request Form\nUniversity Health Services: 410-455-2542 [Monday – Friday 8:30 a.m. – 5 p.m.]\nPastoral Counseling via Interfaith Center: 410-455-3657; interfaith@umbc.edu [7 days a week; Fall and Spring 7 a.m. – 11 p.m.; Summer and Winter 8 a.m. – 8 p.m.]\n\nOther Resources:\n\nWomen’s Center (for students of all genders): 410-455-2714; womenscenter@umbc.edu. [Monday – Thursday 10:00am-5:30pm and Friday 10:00am-4pm]\nShady Grove Student Resources, Maryland Resources, National Resources.\n\n\n\n\n\n\n\n\n\nChild Abuse and Neglect\n\n\n\nPlease note that Maryland law and UMBC policy require that faculty report all disclosures or suspicions of child abuse or neglect to the Department of Social Services and/or the police even if the person who experienced the abuse or neglect is now over 18."
  },
  {
    "objectID": "syllabus.html#plagiarism",
    "href": "syllabus.html#plagiarism",
    "title": "GES660: Building Spatial Datasets",
    "section": "Plagiarism",
    "text": "Plagiarism\nCopying or using another’s work in written or oral form—partial or complete—without giving credit to the other person is a serious academic offense and is taken very seriously in this class, by the Department and by the University of Maryland, Baltimore County. UMBC specifically defines plagiarism as anyone who “knowingly, or by carelessness or negligence, representing as one’s own in any academic exercise the words, ideas, works of art or computer-generated information and images of someone else.”\nAny student who plagiarizes will be referred to the Department Chair and will be subject to the policies of the university. In general, the consequences of plagiarism include failing an assignment, receiving a lower course grade, and even failing a course. Examples of plagiarism include:\n\nSubmit someone else’s work as your own.\nBuy a paper from a paper-mill, website or other source.\nCopy sentences, phrases, paragraphs, or ideas from someone else’s work, published or unpublished, without giving the original author credit.\nReplace select words from a passage without giving the original author credit.\nCopy any type of graphics, tables, graphs, maps, or charts from someone else’s work without giving the original author credit.\nPiece together phrases, ideas, and sentences from a variety of sources to write an essay.\nBuild on someone else’s idea or phrase without giving the original author credit.\n\nDetails about avoiding plagiarism, examples, and disciplinary policies should be reviewed to gain a clear understanding prior to working on an assignment or exam."
  },
  {
    "objectID": "syllabus.html#covid-19-safety-protocols-and-compliance-statement",
    "href": "syllabus.html#covid-19-safety-protocols-and-compliance-statement",
    "title": "GES660: Building Spatial Datasets",
    "section": "COVID-19 Safety Protocols and Compliance Statement",
    "text": "COVID-19 Safety Protocols and Compliance Statement\nUMBC has set clear expectations for masking while on campus that include the requirement that you must wear a KN95 face mask or equivalent that covers your nose and mouth in all classrooms regardless of your vaccination status. Find more information on masks equivalent to KN95s at https://covid19.umbc.edu/masks/\nThis is to protect your health and safety as well as the health and safety of your classmates, instructor, and the university community. Anyone attending class without a KN95 mask or wearing one improperly will be asked by the instructor to put on a KN95 mask or fix their mask in the appropriate position. Any student that refuses to comply with this directive will be asked to leave the classroom immediately and failure to do so may result in the instructor requesting the assistance of the University Police. Students who refuse to wear KN95 masks may be referred to Student Conduct and Community Standards and may face disciplinary action for violations of the Code of Student Conduct, specifically, Rule 2: Behavior Which Jeopardizes the Health or Safety of Self or Others and Rule 16: Failure to Comply with the Request of a University Official. UMBC’s on-campus safety protocols, including masking requirements, are subject to change in response to the evolving situation with COVID-19."
  }
]